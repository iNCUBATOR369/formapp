// server.js
require('dotenv').config();
const express = require('express');
const bodyParser = require('body-parser');
const { Telegraf } = require('telegraf');
const path = require('path');

const BOT_TOKEN = process.env.BOT_TOKEN;
const PUBLIC_URL = process.env.PUBLIC_URL; // –Ω–∞–ø—Ä–∏–º–µ—Ä: https://formapp-xvb0.onrender.com
if (!BOT_TOKEN || !PUBLIC_URL) {
  console.error('‚ùå BOT_TOKEN –∏–ª–∏ PUBLIC_URL –Ω–µ –∑–∞–¥–∞–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

const app = express();
app.use(bodyParser.json());
app.use(express.static(path.join(__dirname, 'public')));

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf(BOT_TOKEN);

// 1) –ü—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: WebApp.sendData(...)
bot.on('message', async (ctx) => {
  try {
    const msg = ctx.message || {};
    // –µ—Å–ª–∏ –ø—Ä–∏—à–ª–æ web_app_data
    if (msg.web_app_data && typeof msg.web_app_data.data === 'string') {
      const data = msg.web_app_data.data;
      await ctx.reply(`üì¶ Received from Mini App: ${data}`);
      return;
    }

    // –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç ‚Äî —ç—Ö–æ
    if (msg.text) {
      await ctx.reply(`You said: ${msg.text}`);
    }
  } catch (err) {
    console.error('‚ùå Error in message handler:', err);
  }
});

// 2) –í–µ–±—Ö—É–∫
const webhookPath = `/tg/${BOT_TOKEN}`;
app.use(webhookPath, (req, res, next) => {
  // –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ ‚Äî —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –∫–∞–∂–¥—ã–π –≤—Ö–æ–¥—è—â–∏–π –∞–ø–¥–µ–π—Ç –≤ –ª–æ–≥–∞—Ö Render
  console.log('‚û°Ô∏è  Incoming update:', JSON.stringify(req.body));
  next();
}, bot.webhookCallback(webhookPath));

// 3) –ì–ª–∞–≤–Ω–∞—è (–¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ ‚Äú–∂–∏–≤ –ª–∏ —Å–µ—Ä–≤–µ—Ä‚Äù)
app.get('/healthz', (_, res) => res.status(200).send('OK'));

// 4) –°—Ç–∞—Ä—Ç—É–µ–º
const PORT = process.env.PORT || 10000;
app.listen(PORT, async () => {
  console.log(`üöÄ HTTP server on ${PORT}`);

  // –°—Ç–∞–≤–∏–º –≤–µ–±—Ö—É–∫
  const webhookUrl = `${PUBLIC_URL}${webhookPath}`;
  try {
    await bot.telegram.setWebhook(webhookUrl);
    const info = await bot.telegram.getWebhookInfo();
    console.log('‚úÖ Webhook set to:', info.url || webhookUrl);
  } catch (err) {
    console.error('‚ùå setWebhook error:', err);
  }
});
