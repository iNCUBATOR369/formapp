<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>FormApp â€” Mini App</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <script src="https://telegram.org/js/telegram-web-app.js"></script>
  <style>
    body { font-family: system-ui, Arial, sans-serif; margin: 16px; }
    .card { border: 1px solid #e6e6e6; border-radius: 12px; padding: 16px; margin-bottom: 12px; }
    input, button { font-size: 16px; }
    button { padding: 12px 16px; border-radius: 10px; border: none; }
  </style>
</head>
<body>
  <h1>Welcome to <b>FormApp</b> ðŸ‘‹</h1>

  <div class="card" id="userBox">Loading userâ€¦</div>

  <div class="card">
    <label>Text to publish in chat:</label><br/>
    <input id="msg" value="This message came from the Mini App!" style="width:100%; padding:8px; margin:8px 0;" />
    <button id="publish">Publish to chat (answerWebAppQuery)</button>
  </div>

  <div class="card">
    <button id="sendData">Send data to bot (sendData)</button>
  </div>

  <script>
    const tg = window.Telegram.WebApp;
    tg.ready();
    tg.expand();
    tg.setHeaderColor('secondary_bg_color');

    const u = tg.initDataUnsafe?.user;
    document.getElementById('userBox').innerText =
      u ? `You are: ${u.first_name} ${u.last_name||''} (@${u.username||'â€”'})`
        : 'Open this page inside Telegram.';

    // Server-side auth check (important)
    fetch('/auth/tma', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ initData: tg.initData })
    })
    .then(r => r.json())
    .then(j => { if (!j.ok) alert('Server could not validate initData. Open via Telegram.'); })
    .catch(()=>{});

    // Publish to chat (requires opening via inline button to have query_id)
    document.getElementById('publish').onclick = async () => {
      const text = document.getElementById('msg').value;
      const qid = tg.initDataUnsafe?.query_id;
      if (!qid) { alert('Open via the inline button under bot message to get query_id.'); return; }
      const res = await fetch('/api/publish', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ query_id: qid, text })
      }).then(r => r.json());
      if (res?.ok) tg.close(); else alert('Publish failed');
    };

    // Send data to bot (bot will reply)
    document.getElementById('sendData').onclick = () => {
      const payload = JSON.stringify({ hello: 'from mini app', ts: Date.now() });
      tg.sendData(payload);
    };
  </script>
</body>
</html>
